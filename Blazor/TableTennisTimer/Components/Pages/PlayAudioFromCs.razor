@page "/PlayAudioFromCs"
@using System;
@using System.Diagnostics;
@using System.Media;
@using System.Threading.Tasks;
@using System.Timers;
@using Microsoft.AspNetCore.Components;
@using static System.Console;
@inject IJSRuntime JSRuntime

<h1>Blazor Sound Demo</h1>
<h3>PlayAudioFromCs</h3>
<p>https://exceptionnotfound.net/how-to-play-a-sound-with-blazor-and-javascript/</p>

<p>Main target + <audio id="sound1" controls><source src=@src type="audio/mpeg"></audio></p>
<p>Muted starter <audio id="sound2" autoplay controls muted><source src=@src type="audio/mpeg"></audio> </p>
<p>Looped play + <audio id="sound3" controls loop="loop"><source src=@src type="audio/mpeg"></audio> </p>

<p>Report: @src</p>

<p>
  <button id="soundButton" @onclick="PlaySound">PlaySound</button> 
  <button id="stopButton" @onclick="PauseSound">PauseSound</button>
  <button id="cngButton" @onclick="ChangeSound">ChangeSound</button>
</p>

@code {
  private string src = "Audio/Start - Arcade Alarm.mp3";

  protected override async void OnInitialized()
  {
    base.OnInitialized();

    // await Task.Delay(1000); //tu: does not work without this delay. why?
    // await PlaySound();
  }
  public async Task PlaySoundWhileTrue()
  {
    while (true)
    {
      WriteLine("start playing sound1  ▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀");
      await JSRuntime.InvokeAsync<string>("PlayAudio", "sound1");
      await Task.Delay(1_500);
    }
  }
  public async Task PlaySound()
  {
    WriteLine("start playing sound1  ▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀");
    await JSRuntime.InvokeAsync<string>("PlayAudio", "sound1");
  }
  public void ChangeSound()
  {
    src = "Audio/Start - Arcade Power Up.7.mp3";
    StateHasChanged(); // await InvokeAsync(StateHasChanged);
  }
  public async Task PauseSound()
  {
    WriteLine("start playing sound1  ▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀");
    await JSRuntime.InvokeAsync<string>("PauseAudio", "sound1");
  }
}
